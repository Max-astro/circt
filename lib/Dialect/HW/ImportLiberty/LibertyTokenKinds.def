//===- LibertyTokenKinds.def - .lib file Token Descriptions -------*- C++
//-*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file is intended to be #include'd multiple times to extract information
// about tokens for various clients in the lexer.
//
//===----------------------------------------------------------------------===//

#if !defined(TOK_MARKER) && !defined(TOK_IDENTIFIER) &&                        \
    !defined(TOK_LITERAL) && !defined(TOK_PUNCTUATION) &&                      \
    !defined(TOK_KEYWORD)
#error Must define one of the TOK_ macros.
#endif

#ifndef TOK_MARKER
#define TOK_MARKER(X)
#endif
#ifndef TOK_IDENTIFIER
#define TOK_IDENTIFIER(NAME)
#endif
#ifndef TOK_LITERAL
#define TOK_LITERAL(NAME)
#endif
#ifndef TOK_PUNCTUATION
#define TOK_PUNCTUATION(NAME, SPELLING)
#endif
#ifndef TOK_KEYWORD
#define TOK_KEYWORD(SPELLING)
#endif

// Markers
TOK_MARKER(eof)
TOK_MARKER(error)

// Identifiers.
TOK_IDENTIFIER(identifier) // `foo : xxx` or `foo () {}`

// Literals
TOK_LITERAL(number)      // 42 or -0.123
TOK_LITERAL(string)      // "foo"
TOK_LITERAL(colon_value) // `: foo`
TOK_LITERAL(paren_value) // (fooï¼‰

// Punctuation.
TOK_PUNCTUATION(comma, ",")
// TOK_PUNCTUATION(period, ".")
// TOK_PUNCTUATION(colon, ":")
// TOK_PUNCTUATION(semicolon, ";")
// TOK_PUNCTUATION(l_paren, "(")
// TOK_PUNCTUATION(r_paren, ")")
TOK_PUNCTUATION(l_brace, "{")
TOK_PUNCTUATION(r_brace, "}")
// TOK_PUNCTUATION(quote, "\"")

// Keywords.  These turn "foo" into FIRToken::kw_foo enums.

// NOTE: Please key these alphabetized to make it easier to find something in
// this list and to cater to OCD.

TOK_KEYWORD(library)
TOK_KEYWORD(define)
TOK_KEYWORD(lu_table_template)

TOK_KEYWORD(cell)
TOK_KEYWORD(pin)

// TOK_KEYWORD(timing)
// TOK_KEYWORD(related_pin)
// TOK_KEYWORD(timing_sense)
// TOK_KEYWORD(timing_type)
// TOK_KEYWORD(cell_rise)
// TOK_KEYWORD(cell_fall)
// TOK_KEYWORD(rise_transition)
// TOK_KEYWORD(fall_transition)

// TOK_KEYWORD(leakage_power)
// TOK_KEYWORD(internal_power)
// TOK_KEYWORD(fall_power)
// TOK_KEYWORD(rise_power)

// TOK_KEYWORD(index_1)
// TOK_KEYWORD(index_2)
// TOK_KEYWORD(index_3)

#undef TOK_MARKER
#undef TOK_IDENTIFIER
#undef TOK_LITERAL
#undef TOK_PUNCTUATION
#undef TOK_KEYWORD
